-- Simple World 1.0b7 --

Now there are two possible versions of the code of a bug:
- The initial code is the code is the code that a egg has when it's created.
  This code can be the code of a spawn or a copy of the executable code of
  its father. This initial code of a bug isn't never modified.
- The executable code is the code that the bug is executing while it's alive.
  When the bug died, this code is deleted from the database.

As the initial code can't be modified, the bugs spawned will share the same
code. Also, as the executable code is deleted after the death of a bug, the
database size of this version is lower than the previous version.
    
As the changes to the database were not compatible, the database version was
increased to 6.


-- Simple World 1.0b6 (2012/04/15) --

The main change in this version is the addition of the worldlib
(World Library), a new SWL library. The worldlib is based in the
concept of events management. Events are things that happen (the
bug is attacked, blocked, etc) that can provoke the execution of
code. For example, when a bug is blocked (event) the bug can try
other path (handler).

There are a lot of changes in the stdlib. To be able to add the
worldlib new map and multimap data structures were added. In
addition the files of the stdlib were splitted in several files:
one function, variable or definition in each file. This way, if
you don't need all the code of the old header, you can include
just what you need.

A new bug, named Coward, was added. The main peculiarities of this
bug is that it avoids confrontation and that it's the first bug to
use the worldlib.

Finally, to help complex bugs that need a lot of initialization
code, for example the bugs that use the worldlib, in every unit of
time up to 1024 instructions can be executed.


-- Simple World 1.0b5 (2011/11/11) --

In this version there are several changes to the CPU. In first
place, the cs (control & status) register is replaced by two
new registers: wc (window counter) and ip (interrupt table
pointer). The old cs register used to store the window counter
and the interrupt table pointer, among other not too usefull
things. With the addition of the wc and ip registers it's
easier to change the interrupt table pointer and the interrupt
table pointer hadn't to be in the first 64KBs of the code.

Other change to the CPU is the addition of the local lr (link
register) register and the convertion of the fp (frame pointer)
register to a local register. So, now there are only 6 local
general purpose registers but in most of the cases when a
function is called no space in the stack is needed.

A important change in the World is that now every unit of time
up to 16 CPU instructions are executed. So, bugs that do more
calculus between actions have some advantage. Other change is
that the food can be rot when is getting old.

Finally, 3 new kinds of mutations are added:
a) partial mutation: only some bytes of the word is mutated.
b) permutation: the bytes of the word are permuted.
c) duplication: the previous word is duplicated.

The database format has changed again, so the database version was
changed to 5.


-- Simple World 1.0b4 (2011/01/10) --

This is a small version in which most of the functionality found in
the scripts directory were replaced with code added to the
executable:
a) Spawns: spawns are regions of the world where eggs are added
   periodically.
b) Resources: resources are regions of the world where food is
   added periodically.
c) Stats: a new table was added to the database where a summary
   of the state of the bugs and food is stored.

As the database format has changed, the database version was changed
to 4.


-- Simple World 1.0b3 (2010/10/11) --

Most of the work in this version was done in the database. Again,
incompatible changes with the previous versions. I decided that the
database version released with 1.0 will be the version 1, even if
now the database version is 3.

A new bug is added in this version: herbivorous. This bug is based in
brainless but with the difference that it never attacks other bugs, it
only looks for food to eat.


-- Simple World 1.0b2 (2010/10/11) --

The CPU now uses register windows to easy the development. Now there
are two kinds of registers:
a) Global registers: registers shared by all the program (pc, sp, fp,
   cs and g0-g3).
b) Local registers: registers that only the current function can see
   (r0-r7).
By using register windows the code is more compact, uses less stack
space and is easier to read/change.

The rename and reorder of the registers make this version code and
binary incompatible with the previous one.

The Simple World Language was improved with the addition of conditional
code compilation and macros:
a) A block of code can be compiled or not depending if a given
   identificator is defined or not. Using ifdef/endif a block is
   compiled if the given identificator is defined. Using ifndef/endif
   a block of code is compiles if the given identificator is not
   defined.
b) A macro is a block of code linked with a identificator. When the
   macro is used the optional parameters are substituted by its value.


-- Simple World 1.0b1 (2010/03/02) --

Simple World should be more portable now. It was tested (under 
emulation) in big endian and little endian architectures, in 32 bits and 
64 bits architectures and in several UNIXes.

The CPU is less resistant to errors than in the previous versions. Now,
when the code causes a interrupt if the interrupt is supposed to be
handled but some error happens, the bug is killed. Until now, in the
previous case, the CPU tries to send a new interrupt, but sometimes this
is impossible.

The most important addition in this version was the stdlib (standard
library of SWL). Some interesting parts are the data structures: lists,
queue, etc; and a dynamic memory allocator or the code to help to manage
interrupts.

This version has incompatibles changes in the code of the bugs. Several 
new instructions have been added to access half and quarter words and 
these instructions caused that the code of some old instructions changed 
its value.

This version has incompatible changes in the database too. The database 
version is still 1 because this is the first beta version and the 
previous was alpha ones. But, from now, every incompatible change in the 
database will change the database version.


-- Simple World 1.0a4 (2008/04/14) --

This was supposed to be the first beta of Simple World, but there are
more changes than previously thought. Some of these changes were
incompatibles with previous versions and prevent the use of previous
bugs in this version:
a) changes in the instructions and in the registers of the CPU
b) new registers in the CPU
c) changes in the database


-- Simple World 1.0a3 (2008/01/28) --

This is the last alpha version of Simple World. With this version, all 
the functionality of the specification 1.0 is working. This means, that:
a) the bugs can be coded
b) the bugs interact with the World
c) the bugs can put eggs
d) the code of the eggs can mutate


-- Simple World 1.0a2 (2007/12/10) --

This version allows the first battles between the bugs. They can go for 
all the World, get information about what they found in its path, attack 
other bugs and eat food. The only bug present in this version, 
brainless, can do all this.


-- Simple World 1.0a1 (2007/11/12) --

This is the first release of Simple World, the first alpha of 1.0.
The functionality of this release is not completed. The bugs can only 
move and get information about the World.
