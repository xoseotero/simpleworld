# @file worldlib/move/_randommove.swl
# Move randomly.
# std_init and world_init must be executed before using any of this functions.
#
#  Copyforward (C) 2012  Xos√© Otero <xoseotero@gmail.com>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.


.include "stdlib/world.swl"
.include "stdlib/random/random.swl"
.include "worldlib/def.swl"
.include "worldlib/events/throw.swl"


# Move randomly.
# EVENTS: WORLD_MOVEINTED: action move interrupted
#         WORLD_BLOCKED: the bug is blocked (forwards)
#         WORLD_BLOCKEDBACK: the bug is blocked (backwards)
.label _world_moverandommove
        loadi r0 STD_INTERRUPTED        # interrupted

        call std_random
        modi g0 g0 0x2
        bz g0 __world_moverandommove_moveback

        .label __world_moverandommove_moveforward
        world STD_MOVEFORWARD
        beq g0 r0 __world_moverandommove_moveinterrupt
        bnz g0 __world_moverandommove_moveblocked
        b __world_moverandommove_ret

        .label __world_moverandommove_moveback
        world STD_MOVEBACKWARD
        beq g0 r0 __world_moverandommove_moveinterrupt
        bnz g0 __world_moverandommove_moveblockedback

        .label __world_moverandommove_ret
        ret


        .label __world_moverandommove_moveinterrupt
        loadi g0 WORLD_TURNINTED
        b __world_moverandommove_throw

        .label __world_moverandommove_moveblocked
        loadi g0 WORLD_BLOCKED
        b __world_moverandommove_throw

        .label __world_moverandommove_moveblockedback
        loadi g0 WORLD_BLOCKEDBACK

        .label __world_moverandommove_throw
        call world_throw
        ret
